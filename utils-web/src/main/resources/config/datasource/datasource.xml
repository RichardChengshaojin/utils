<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/tx
 	  		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    <bean id="propertyConfigurer"
          class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config/datasource/db_config.properties</value>
            </list>
        </property>
    </bean>

    <!--数据源-->
    <bean id="datasource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url"
                  value="jdbc:mysql://${db.ip}:${db.port}/${db.database}?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true"/>
        <property name="username" value="${db.user}"/>
        <property name="password" value="${db.password}"/>
        <!--<property name="filters" value="${druid.filters}"/>-->
        <property name="maxActive" value="${druid.maxActive}"/>
        <property name="initialSize" value="${druid.initialSize}"/>
        <property name="maxWait" value="${druid.maxWait}"/>
        <property name="minIdle" value="${druid.minIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${druid.validationQuery}"/>
        <property name="testWhileIdle" value="${druid.testWhileIdle}"/>
        <property name="testOnBorrow" value="${druid.testOnBorrow}"/>
        <property name="testOnReturn" value="${druid.testOnReturn}"/>
        <property name="connectionErrorRetryAttempts" value="${druid.connectionErrorRetryAttempts}"/>
        <property name="breakAfterAcquireFailure" value="${druid.breakAfterAcquireFailure}"/>
        <property name="poolPreparedStatements" value="${druid.poolPreparedStatements}"/>
    </bean>

    <!--sql session工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="datasource"/>
        <property name="configLocation" value="classpath:config/mybatis/mybatis.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
        <property name="basePackage" value="com.richard.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <bean id="defaultTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource"/>
    </bean>

    <tx:annotation-driven transaction-manager="defaultTransactionManager"/>

</beans>